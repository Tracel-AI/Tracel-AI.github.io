(function() {var type_impls = {
"burn":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ComputeClient%3CServer,+Channel%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/burn_compute/client.rs.html#35-38\">source</a><a href=\"#impl-ComputeClient%3CServer,+Channel%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Server, Channel&gt; <a class=\"struct\" href=\"burn_compute/client/struct.ComputeClient.html\" title=\"struct burn_compute::client::ComputeClient\">ComputeClient</a>&lt;Server, Channel&gt;<span class=\"where fmt-newline\">where\n    Server: <a class=\"trait\" href=\"burn_compute/server/trait.ComputeServer.html\" title=\"trait burn_compute::server::ComputeServer\">ComputeServer</a>,\n    Channel: <a class=\"trait\" href=\"burn_compute/channel/base/trait.ComputeChannel.html\" title=\"trait burn_compute::channel::base::ComputeChannel\">ComputeChannel</a>&lt;Server&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/burn_compute/client.rs.html#41\">source</a><h4 class=\"code-header\">pub fn <a href=\"burn_compute/client/struct.ComputeClient.html#tymethod.new\" class=\"fn\">new</a>(\n    channel: Channel,\n    tuner: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"burn_common/stub/struct.RwLock.html\" title=\"struct burn_common::stub::RwLock\">RwLock</a>&lt;<a class=\"struct\" href=\"burn_compute/tune/tuner/struct.Tuner.html\" title=\"struct burn_compute::tune::tuner::Tuner\">Tuner</a>&lt;Server, Channel&gt;&gt;&gt;\n) -&gt; <a class=\"struct\" href=\"burn_compute/client/struct.ComputeClient.html\" title=\"struct burn_compute::client::ComputeClient\">ComputeClient</a>&lt;Server, Channel&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new client.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method\"><a class=\"src rightside\" href=\"src/burn_compute/client.rs.html#50\">source</a><h4 class=\"code-header\">pub fn <a href=\"burn_compute/client/struct.ComputeClient.html#tymethod.read\" class=\"fn\">read</a>(&amp;self, handle: &amp;<a class=\"struct\" href=\"burn_compute/server/struct.Handle.html\" title=\"struct burn_compute::server::Handle\">Handle</a>&lt;Server&gt;) -&gt; <a class=\"enum\" href=\"burn/tensor/enum.Reader.html\" title=\"enum burn::tensor::Reader\">Reader</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Given a handle, returns owned resource as bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create\" class=\"method\"><a class=\"src rightside\" href=\"src/burn_compute/client.rs.html#55\">source</a><h4 class=\"code-header\">pub fn <a href=\"burn_compute/client/struct.ComputeClient.html#tymethod.create\" class=\"fn\">create</a>(&amp;self, data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"struct\" href=\"burn_compute/server/struct.Handle.html\" title=\"struct burn_compute::server::Handle\">Handle</a>&lt;Server&gt;</h4></section></summary><div class=\"docblock\"><p>Given a resource, stores it and returns the resource handle.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty\" class=\"method\"><a class=\"src rightside\" href=\"src/burn_compute/client.rs.html#60\">source</a><h4 class=\"code-header\">pub fn <a href=\"burn_compute/client/struct.ComputeClient.html#tymethod.empty\" class=\"fn\">empty</a>(&amp;self, size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"burn_compute/server/struct.Handle.html\" title=\"struct burn_compute::server::Handle\">Handle</a>&lt;Server&gt;</h4></section></summary><div class=\"docblock\"><p>Reserves <code>size</code> bytes in the storage, and returns a handle over them.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execute\" class=\"method\"><a class=\"src rightside\" href=\"src/burn_compute/client.rs.html#65\">source</a><h4 class=\"code-header\">pub fn <a href=\"burn_compute/client/struct.ComputeClient.html#tymethod.execute\" class=\"fn\">execute</a>(\n    &amp;self,\n    kernel: &lt;Server as <a class=\"trait\" href=\"burn_compute/server/trait.ComputeServer.html\" title=\"trait burn_compute::server::ComputeServer\">ComputeServer</a>&gt;::<a class=\"associatedtype\" href=\"burn_compute/server/trait.ComputeServer.html#associatedtype.Kernel\" title=\"type burn_compute::server::ComputeServer::Kernel\">Kernel</a>,\n    handles: &amp;[&amp;<a class=\"struct\" href=\"burn_compute/server/struct.Handle.html\" title=\"struct burn_compute::server::Handle\">Handle</a>&lt;Server&gt;]\n)</h4></section></summary><div class=\"docblock\"><p>Executes the <code>kernel</code> over the given <code>handles</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sync\" class=\"method\"><a class=\"src rightside\" href=\"src/burn_compute/client.rs.html#70\">source</a><h4 class=\"code-header\">pub fn <a href=\"burn_compute/client/struct.ComputeClient.html#tymethod.sync\" class=\"fn\">sync</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Wait for the completion of every task in the server.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.autotune_execute\" class=\"method\"><a class=\"src rightside\" href=\"src/burn_compute/client.rs.html#75-78\">source</a><h4 class=\"code-header\">pub fn <a href=\"burn_compute/client/struct.ComputeClient.html#tymethod.autotune_execute\" class=\"fn\">autotune_execute</a>(\n    &amp;self,\n    autotune_operation_set: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"burn_compute/tune/operation/trait.AutotuneOperationSet.html\" title=\"trait burn_compute::tune::operation::AutotuneOperationSet\">AutotuneOperationSet</a>&lt;&lt;Server as <a class=\"trait\" href=\"burn_compute/server/trait.ComputeServer.html\" title=\"trait burn_compute::server::ComputeServer\">ComputeServer</a>&gt;::<a class=\"associatedtype\" href=\"burn_compute/server/trait.ComputeServer.html#associatedtype.AutotuneKey\" title=\"type burn_compute::server::ComputeServer::AutotuneKey\">AutotuneKey</a>&gt;&gt;\n)</h4></section></summary><div class=\"docblock\"><p>Executes the fastest kernel in the autotune operation, using (cached) runtime benchmarks</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.autotune_result\" class=\"method\"><a class=\"src rightside\" href=\"src/burn_compute/client.rs.html#86\">source</a><h4 class=\"code-header\">pub fn <a href=\"burn_compute/client/struct.ComputeClient.html#tymethod.autotune_result\" class=\"fn\">autotune_result</a>(\n    &amp;self,\n    key: &amp;&lt;Server as <a class=\"trait\" href=\"burn_compute/server/trait.ComputeServer.html\" title=\"trait burn_compute::server::ComputeServer\">ComputeServer</a>&gt;::<a class=\"associatedtype\" href=\"burn_compute/server/trait.ComputeServer.html#associatedtype.AutotuneKey\" title=\"type burn_compute::server::ComputeServer::AutotuneKey\">AutotuneKey</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get the fastest kernel for the given autotune key if it exists.</p>\n</div></details></div></details>",0,"burn::backend::wgpu::compute::WgpuComputeClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ComputeClient%3CServer,+Channel%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/burn_compute/client.rs.html#14\">source</a><a href=\"#impl-Debug-for-ComputeClient%3CServer,+Channel%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Server, Channel&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"burn_compute/client/struct.ComputeClient.html\" title=\"struct burn_compute::client::ComputeClient\">ComputeClient</a>&lt;Server, Channel&gt;<span class=\"where fmt-newline\">where\n    Server: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"burn_compute/server/trait.ComputeServer.html\" title=\"trait burn_compute::server::ComputeServer\">ComputeServer</a>,\n    Channel: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/burn_compute/client.rs.html#14\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","burn::backend::wgpu::compute::WgpuComputeClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-ComputeClient%3CS,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/burn_compute/client.rs.html#21-24\">source</a><a href=\"#impl-Clone-for-ComputeClient%3CS,+C%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;S, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"burn_compute/client/struct.ComputeClient.html\" title=\"struct burn_compute::client::ComputeClient\">ComputeClient</a>&lt;S, C&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"burn_compute/server/trait.ComputeServer.html\" title=\"trait burn_compute::server::ComputeServer\">ComputeServer</a>,\n    C: <a class=\"trait\" href=\"burn_compute/channel/base/trait.ComputeChannel.html\" title=\"trait burn_compute::channel::base::ComputeChannel\">ComputeChannel</a>&lt;S&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/burn_compute/client.rs.html#26\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"burn_compute/client/struct.ComputeClient.html\" title=\"struct burn_compute::client::ComputeClient\">ComputeClient</a>&lt;S, C&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","burn::backend::wgpu::compute::WgpuComputeClient"]],
"burn_wgpu":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ComputeClient%3CServer,+Channel%3E\" class=\"impl\"><a href=\"#impl-ComputeClient%3CServer,+Channel%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Server, Channel&gt; ComputeClient&lt;Server, Channel&gt;<span class=\"where fmt-newline\">where\n    Server: ComputeServer,\n    Channel: ComputeChannel&lt;Server&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(\n    channel: Channel,\n    tuner: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;RwLock&lt;Tuner&lt;Server, Channel&gt;&gt;&gt;\n) -&gt; ComputeClient&lt;Server, Channel&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new client.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">read</a>(&amp;self, handle: &amp;Handle&lt;Server&gt;) -&gt; Reader&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Given a handle, returns owned resource as bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">create</a>(&amp;self, data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; Handle&lt;Server&gt;</h4></section></summary><div class=\"docblock\"><p>Given a resource, stores it and returns the resource handle.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">empty</a>(&amp;self, size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>) -&gt; Handle&lt;Server&gt;</h4></section></summary><div class=\"docblock\"><p>Reserves <code>size</code> bytes in the storage, and returns a handle over them.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">execute</a>(\n    &amp;self,\n    kernel: &lt;Server as ComputeServer&gt;::Kernel,\n    handles: &amp;[&amp;Handle&lt;Server&gt;]\n)</h4></section></summary><div class=\"docblock\"><p>Executes the <code>kernel</code> over the given <code>handles</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sync\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">sync</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Wait for the completion of every task in the server.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.autotune_execute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">autotune_execute</a>(\n    &amp;self,\n    autotune_operation_set: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn AutotuneOperationSet&lt;&lt;Server as ComputeServer&gt;::AutotuneKey&gt;&gt;\n)</h4></section></summary><div class=\"docblock\"><p>Executes the fastest kernel in the autotune operation, using (cached) runtime benchmarks</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.autotune_result\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">autotune_result</a>(\n    &amp;self,\n    key: &amp;&lt;Server as ComputeServer&gt;::AutotuneKey\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get the fastest kernel for the given autotune key if it exists.</p>\n</div></details></div></details>",0,"burn_wgpu::compute::base::WgpuComputeClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ComputeClient%3CServer,+Channel%3E\" class=\"impl\"><a href=\"#impl-Debug-for-ComputeClient%3CServer,+Channel%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Server, Channel&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for ComputeClient&lt;Server, Channel&gt;<span class=\"where fmt-newline\">where\n    Server: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + ComputeServer,\n    Channel: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","burn_wgpu::compute::base::WgpuComputeClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-ComputeClient%3CS,+C%3E\" class=\"impl\"><a href=\"#impl-Clone-for-ComputeClient%3CS,+C%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;S, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for ComputeClient&lt;S, C&gt;<span class=\"where fmt-newline\">where\n    S: ComputeServer,\n    C: ComputeChannel&lt;S&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; ComputeClient&lt;S, C&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","burn_wgpu::compute::base::WgpuComputeClient"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()