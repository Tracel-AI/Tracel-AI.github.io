(function() {var type_impls = {
"burn":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handle%3CServer%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/burn_compute/server.rs.html#48\">source</a><a href=\"#impl-Handle%3CServer%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Server&gt; <a class=\"struct\" href=\"burn_compute/server/struct.Handle.html\" title=\"struct burn_compute::server::Handle\">Handle</a>&lt;Server&gt;<span class=\"where fmt-newline\">where\n    Server: <a class=\"trait\" href=\"burn_compute/server/trait.ComputeServer.html\" title=\"trait burn_compute::server::ComputeServer\">ComputeServer</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/burn_compute/server.rs.html#48\">source</a><h4 class=\"code-header\">pub fn <a href=\"burn_compute/server/struct.Handle.html#tymethod.new\" class=\"fn\">new</a>(\n    memory: &lt;&lt;Server as <a class=\"trait\" href=\"burn_compute/server/trait.ComputeServer.html\" title=\"trait burn_compute::server::ComputeServer\">ComputeServer</a>&gt;::<a class=\"associatedtype\" href=\"burn_compute/server/trait.ComputeServer.html#associatedtype.MemoryManagement\" title=\"type burn_compute::server::ComputeServer::MemoryManagement\">MemoryManagement</a> as <a class=\"trait\" href=\"burn_compute/memory_management/base/trait.MemoryManagement.html\" title=\"trait burn_compute::memory_management::base::MemoryManagement\">MemoryManagement</a>&lt;&lt;Server as <a class=\"trait\" href=\"burn_compute/server/trait.ComputeServer.html\" title=\"trait burn_compute::server::ComputeServer\">ComputeServer</a>&gt;::<a class=\"associatedtype\" href=\"burn_compute/server/trait.ComputeServer.html#associatedtype.Storage\" title=\"type burn_compute::server::ComputeServer::Storage\">Storage</a>&gt;&gt;::<a class=\"associatedtype\" href=\"burn_compute/memory_management/base/trait.MemoryManagement.html#associatedtype.Handle\" title=\"type burn_compute::memory_management::base::MemoryManagement::Handle\">Handle</a>\n) -&gt; <a class=\"struct\" href=\"burn_compute/server/struct.Handle.html\" title=\"struct burn_compute::server::Handle\">Handle</a>&lt;Server&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Handle</code>.</p>\n</div></details></div></details>",0,"burn::backend::wgpu::compute::WgpuHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handle%3CServer%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/burn_compute/server.rs.html#54\">source</a><a href=\"#impl-Handle%3CServer%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Server&gt; <a class=\"struct\" href=\"burn_compute/server/struct.Handle.html\" title=\"struct burn_compute::server::Handle\">Handle</a>&lt;Server&gt;<span class=\"where fmt-newline\">where\n    Server: <a class=\"trait\" href=\"burn_compute/server/trait.ComputeServer.html\" title=\"trait burn_compute::server::ComputeServer\">ComputeServer</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/burn_compute/server.rs.html#56\">source</a><h4 class=\"code-header\">pub fn <a href=\"burn_compute/server/struct.Handle.html#tymethod.can_mut\" class=\"fn\">can_mut</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>If the tensor handle can be mut with an inplace operation.</p>\n</div></details></div></details>",0,"burn::backend::wgpu::compute::WgpuHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Handle%3CServer%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/burn_compute/server.rs.html#48\">source</a><a href=\"#impl-Debug-for-Handle%3CServer%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Server&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"burn_compute/server/struct.Handle.html\" title=\"struct burn_compute::server::Handle\">Handle</a>&lt;Server&gt;<span class=\"where fmt-newline\">where\n    Server: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"burn_compute/server/trait.ComputeServer.html\" title=\"trait burn_compute::server::ComputeServer\">ComputeServer</a>,\n    &lt;Server as <a class=\"trait\" href=\"burn_compute/server/trait.ComputeServer.html\" title=\"trait burn_compute::server::ComputeServer\">ComputeServer</a>&gt;::<a class=\"associatedtype\" href=\"burn_compute/server/trait.ComputeServer.html#associatedtype.MemoryManagement\" title=\"type burn_compute::server::ComputeServer::MemoryManagement\">MemoryManagement</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    &lt;Server as <a class=\"trait\" href=\"burn_compute/server/trait.ComputeServer.html\" title=\"trait burn_compute::server::ComputeServer\">ComputeServer</a>&gt;::<a class=\"associatedtype\" href=\"burn_compute/server/trait.ComputeServer.html#associatedtype.Storage\" title=\"type burn_compute::server::ComputeServer::Storage\">Storage</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/burn_compute/server.rs.html#48\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","burn::backend::wgpu::compute::WgpuHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Handle%3CServer%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/burn_compute/server.rs.html#61\">source</a><a href=\"#impl-Clone-for-Handle%3CServer%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Server&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"burn_compute/server/struct.Handle.html\" title=\"struct burn_compute::server::Handle\">Handle</a>&lt;Server&gt;<span class=\"where fmt-newline\">where\n    Server: <a class=\"trait\" href=\"burn_compute/server/trait.ComputeServer.html\" title=\"trait burn_compute::server::ComputeServer\">ComputeServer</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/burn_compute/server.rs.html#62\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"burn_compute/server/struct.Handle.html\" title=\"struct burn_compute::server::Handle\">Handle</a>&lt;Server&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","burn::backend::wgpu::compute::WgpuHandle"]],
"burn_wgpu":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handle%3CServer%3E\" class=\"impl\"><a href=\"#impl-Handle%3CServer%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Server&gt; Handle&lt;Server&gt;<span class=\"where fmt-newline\">where\n    Server: ComputeServer,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(\n    memory: &lt;&lt;Server as ComputeServer&gt;::MemoryManagement as MemoryManagement&lt;&lt;Server as ComputeServer&gt;::Storage&gt;&gt;::Handle\n) -&gt; Handle&lt;Server&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Handle</code>.</p>\n</div></details></div></details>",0,"burn_wgpu::compute::base::WgpuHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handle%3CServer%3E\" class=\"impl\"><a href=\"#impl-Handle%3CServer%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Server&gt; Handle&lt;Server&gt;<span class=\"where fmt-newline\">where\n    Server: ComputeServer,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">can_mut</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>If the tensor handle can be mut with an inplace operation.</p>\n</div></details></div></details>",0,"burn_wgpu::compute::base::WgpuHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Handle%3CServer%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Handle%3CServer%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Server&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Handle&lt;Server&gt;<span class=\"where fmt-newline\">where\n    Server: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + ComputeServer,\n    &lt;Server as ComputeServer&gt;::MemoryManagement: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    &lt;Server as ComputeServer&gt;::Storage: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","burn_wgpu::compute::base::WgpuHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Handle%3CServer%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Handle%3CServer%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Server&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Handle&lt;Server&gt;<span class=\"where fmt-newline\">where\n    Server: ComputeServer,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Handle&lt;Server&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","burn_wgpu::compute::base::WgpuHandle"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()